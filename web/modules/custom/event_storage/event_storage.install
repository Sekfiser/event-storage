<?php

use Drupal\Core\Database\Database;

function event_storage_schema()
{
  $schema['event_storage'] = [
    'description' => 'The table for storing event information',
    'fields' => [
      'event_id' => [
        'description' => 'Primary identifier for event',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,]
      ,
      'event_title' => [
        'description' => 'Title of the event',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,]
      ,
      'event_description' => [
        'description' => 'Description of event',
        'type' => 'text',
        'length' => 100,
        'not null' => TRUE,]
      ,
      'event_type' => [
        'description' => 'Type of the event',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,]
      ,
      'event_start_at' => [
        'description' => 'Date of event start',
        'type' => 'timestamp',
        'not null' => FALSE,
      ]
      ,
      'event_end_at' => [
        'description' => 'Date of event end',
        'type' => 'timestamp',
        'not null' => FALSE,
      ]
      ,
      'event_created_at' => [
        'description' => 'Date of event creation',
        'type' => 'timestamp',
        'not null' => TRUE,
        'default' => 'now()']
      ,
      'event_updated_at' => [
        'description' => 'Date of event update',
        'type' => 'timestamp',
        'not null' => FALSE
      ]
      ,
      'created_by' => [
        'description' => 'Identifier for user that created event',
        'pgsql_type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,]
      ,
      'updated_by' => [
        'description' => 'Identifier for user that updated event',
        'type' => 'int']
      ,
    ],
    'primary key' => ['event_id'],
  ];

  $schema['events_tags'] = [
    'description' => 'Tag for event',
    'fields' => [
      'event_id' => [
        'description' => 'Identifier for event',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'tag_name' => [
        'description' => 'Name of the tag',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,]
      ,
    ],
  ];

  $schema['event_types'] = [
    'description' => 'Tag for event',
    'fields' => [
      'event_type' => [
        'description' => 'Type of the event',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,]
      ,
      'event_type_translation' => [
        'description' => 'Type translation of the event',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,]
      ,
    ],
    'primary key' => ['event_type'],
  ];

  return $schema;
}

function event_storage_install()
{
  try {
    $query = \Drupal::database()->insert('event_types')->fields(['event_type', 'event_type_translation']);
    $query->values(['news', 'Новости']);
    $query->values(['incident', 'Происшествия']);
    $query->values(['cataclysm', 'Катаклизмы']);

    $query->execute();

    $even_storage_file = 'modules/custom/event_storage/db_dumps/event_storage.json';
    if(file_exists($even_storage_file))
    {
      $events = json_decode(file_get_contents($even_storage_file), true);
//      \Drupal::logger('event_storage')->notice(print_r($events, true));
      foreach ($events['event_storage'] as $event){
        $insertFields = [
          'event_title' => $event['event_title'],
          'event_description' => $event['event_description'],
          'event_type' => $event['event_type'],
          'created_by' => $event['created_by'],
          'updated_by' => $event['updated_by'],
          'event_start_at' => $event['event_start_at'],
          'event_end_at' => $event['event_end_at'],
        ];

        try {
          \Drupal::database()->insert('event_storage')->fields(
            $insertFields
          )->execute();

        } catch (\Exception $e) {

        }
      }
    }

    $events_tags_file = 'modules/custom/event_storage/db_dumps/events_tags.json';
    if(file_exists($events_tags_file))
    {
      $tags = json_decode(file_get_contents($events_tags_file), true);
//      \Drupal::logger('event_storage')->notice(print_r($events, true));
      foreach ($tags['events_tags'] as $tag){
        $insertFields = [
          'event_id' => $tag['event_id'],
          'tag_name' => $tag['tag_name'],
        ];

        try {
          \Drupal::database()->insert('events_tags')->fields(
            $insertFields
          )->execute();

        } catch (\Exception $e) {

        }
      }
    }
  } catch (Exception $e) {
  }
}
